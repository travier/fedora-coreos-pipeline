streams:
    "4.13":
      type: mechanical
      variants: []
      source_config_ref: master
      # the in-development RHCOS stream always uses :main until cosa is branched
      cosa_img: quay.io/coreos-assembler/coreos-assembler:main
    "4.12":
      type: mechanical
      variants: []
      source_config_ref: master
      # TODO: Branch COSA when we're ready
      cosa_img: quay.io/coreos-assembler/coreos-assembler:main
    "4.11":
      type: mechanical
      skip_artifacts:
        all:
          - extensions-container
          ## Needs to wait for oscontainer backports
          - legacy-oscontainer
        s390x:
          - ibmcloud
      # For multi-arch builds, we use `cosa remote-session`. However, that
      # functionality hasn't been backported to 4.11 and older cosa branches. We
      # recently did some golang migration [1] and happened to add the `cosa
      # remote-session` pieces [2] after that migration. This makes it not easy
      # to backport. For now, this hack knob allows us to use the latest COSA
      # for the "outer" pod. We will still use the versioned COSA on the remote
      # so the actual building will happen with the correctly versioned COSA
      # (notice how the top-level `cosa_img` has `${STREAM}`).
      # [1] https://github.com/coreos/coreos-assembler/pull/2919
      # [2] https://github.com/coreos/coreos-assembler/pull/2979
      cosa_controller_img_hack: quay.io/coreos-assembler/coreos-assembler:main
    "4.10":
      type: mechanical
      skip_artifacts:
        all:
          - extensions-container
          ## Needs to wait for oscontainer backports
          - legacy-oscontainer
          ## skip for now while I test
          - live
          - metal
          - metal4k
        aarch64:
          - azure
        ppc64le:
          - powervs
        s390x:
          - ibmcloud
      cosa_controller_img_hack: quay.io/coreos-assembler/coreos-assembler:main
    "4.9":
      type: mechanical
      additional_artifacts:
        all:
          - legacy-oscontainer
      skip_artifacts:
        all:
          - extensions-container
        aarch64:
          - azure
        ppc64le:
          - powervs
        s390x:
          - ibmcloud
        x86_64:
          - aliyun
          - nutanix
      cosa_controller_img_hack: quay.io/coreos-assembler/coreos-assembler:main
    "4.8":
      type: mechanical
      additional_artifacts:
        all:
          - legacy-oscontainer
      skip_artifacts:
        all:
          - extensions-container
        aarch64:
          - azure
          - openstack
        ppc64le:
          - powervs
        s390x:
          - ibmcloud
        x86_64:
          - aliyun
          - azurestack
          - nutanix
      cosa_controller_img_hack: quay.io/coreos-assembler/coreos-assembler:main
    "4.7":
      type: mechanical
      additional_artifacts:
        all:
          - legacy-oscontainer
      skip_artifacts:
        all:
          - extensions-container
        ppc64le:
          - powervs
        s390x:
          - ibmcloud
        x86_64:
          - aliyun
          - azurestack
          - nutanix
      cosa_controller_img_hack: quay.io/coreos-assembler/coreos-assembler:main
    "4.6":
      type: mechanical
      additional_artifacts:
        all:
          - legacy-oscontainer
      skip_artifacts:
        all:
          - extensions-container
        ppc64le:
          - powervs
        s390x:
          - ibmcloud
        x86_64:
          - aliyun
          - azurestack
          - ibmcloud
          - nutanix
      cosa_controller_img_hack: quay.io/coreos-assembler/coreos-assembler:main

cosa_img: quay.io/coreos-assembler/staging:rhcos-${STREAM}-new

additional_arches: [aarch64, ppc64le, s390x]

source_config:
  url: https://github.com/dustymabe/os
  ref: release-${STREAM}
  yumrepos: https://gitlab.cee.redhat.com/coreos/redhat-coreos.git

default_artifacts:
  all:
    - extensions-container
    - legacy-oscontainer
    - live
    - metal
    - metal4k
    - openstack
  aarch64:
    - aws
    - azure
  ppc64le:
    - powervs
  s390x:
    - dasd
    - ibmcloud
  x86_64:
    - aliyun
    - aws
    - azure
    - azurestack
    - gcp
    - ibmcloud
    - nutanix
    - vmware

s3:
  bucket: rhcos-ci
  builds_key: "prod/streams/${STREAM}"

registry_repos:
  oscontainer: quay.io/openshift-release-dev/rhel-coreos-dev
  oscontainer_old: registry.ci.openshift.org/rhcos-devel/machine-os-oci-content
  legacy_oscontainer: quay.io/openshift-release-dev/rhel-coreos-dev
  legacy_oscontainer_old: registry.ci.openshift.org/rhcos-devel/machine-os-content
  extensions: quay.io/openshift-release-dev/rhel-coreos-dev
  add_build_tag: true
  v2s2: true

clouds:
  aliyun:
    bucket: rhcos-devel
    primary_region: us-east-1
  aws:
    bucket: rhcos-ci/testing/amis
    primary_region: us-east-1
    # Our development stream doesn't need to be public, and things are
    # a lot easier if it's not by default.
    public: false
    # We don't have proper credentials for govcloud yet
    # govcloud:
    #   bucket: rh-openshift-rhcos-govcloud-prod-vmimport-art-upload
    #   # s3 bucket is located in us-gov-west-1
    #   primary_region: us-gov-west-1
    #   # Our development stream doesn't need to be public, and things are
    #   # a lot easier if it's not by default.
    #   public: false
  azure:
    resource_group: os4-common
    storage_account: rhcoshorcruxes
    storage_container: imagebucket
  gcp:
    bucket: rhcos-devel/devel/rhcos
    public: true
    licenses:
      - "https://compute.googleapis.com/compute/v1/projects/vm-options/global/licenses/enable-vmx"
